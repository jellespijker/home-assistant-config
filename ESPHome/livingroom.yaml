substitutions:
  name: livingroom
  friendly_name: "Livingroom"


esphome:
  name: esphome-${name}
  platform: ESP8266
  board: nodemcuv2


# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: !secret IOT_SSID
  password: !secret IOT_SSID_PASSWORD

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-${friendly_name}"
    password: !secret ESPHOME_AP

captive_portal:

i2c:
  
bme680_bsec:

text_sensor:
  - platform: template
    name: "Uptime ${friendly_name} Human Readable:"
    id: uptime_human
    icon: mdi:clock-start

  - platform: bme680_bsec
    iaq_accuracy:
      name: "IAQ Accuracy Livingroom"

sensor:
  - platform: uptime
    name: "Uptime ${friendly_name}"
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

  - platform: wifi_signal
    name: "WiFi ${friendly_name}"
    update_interval: 60s

  - platform: tsl2561
    name: "Ambient Light ${friendly_name}"
    update_interval: 30s

  - platform: bme680_bsec
    temperature:
      name: "Temperature ${friendly_name}"
    pressure:
      name: "Pressure ${friendly_name}"
    humidity:
      name: "Humidity ${friendly_name}"
    iaq:
      name: "IAQ ${friendly_name}"
    co2_equivalent:
      name: "CO2 Equivalent ${friendly_name}"
    breath_voc_equivalent:
      name: "Breath VOC Equivalent ${friendly_name}"
